VIEWS.PY

from django.shortcuts import render

from Videoclub.models import videoclub, socios
from django.shortcuts import render_to_response, get_object_or_404
from django.contrib.auth.models import User
from Videoclub.forms import formContact, videoclubForm
from django.http import HttpResponse, HttpResponseRedirect
from django.template import RequestContext
from django.core.mail import EmailMessage
from django.contrib.auth.forms import UserCreationForm, AuthenticationForm
from django.contrib.auth import login, authenticate, logout
from django.contrib.auth.decorators import login_required

def cartelera(request):
    peliculas = videoclub.objects.all()
    clientes = socios.objects.all()
    return render_to_response('cartelera.html', {'lista':peliculas, 'clientes':clientes},
                              context_instance=RequestContext(request))

def detalle(request, id_pelicula):
    dato = get_object_or_404(videoclub, id=id_pelicula)
    return render_to_response('detalle.html', {'pelicula':dato}, context_instance=RequestContext(request))

def formularioC(request):
    if request.method == 'POST':
        formulario = formContact(request.POST)
        if formulario.is_valid():
            titulo = "Formulario de Contacto"
            contenido = formulario.cleaned.data['mensaje'] + "\n"
            contenido += "Comunicarse con: " + formulario.cleaned.data['email']
            correo = EmailMessage(titulo, contenido, to=['to_who@gmail.com'])
            correo.send()
            return HttpResponseRedirect("/")
    else:
        formulario = formContact()

    return render_to_response('formularioC.html', {'formulario': formulario},
                                      context_instance=RequestContext(request))

def nueva_pelicula(request):
    if request.method == 'POST':
        formulario = videoclubForm(request.POST)
        if formulario.is_valid():
            formulario.save()
            return HttpResponseRedirect("/")
    else:
        formulario = videoclubForm()

    return render_to_response('nueva_pelicula.html', {'formulario': formulario},
                                      context_instance=RequestContext(request))

def nuevo_usuario(request):
    if request.method == 'POST':
        formulario = UserCreationForm(request.POST)
        if formulario.is_valid():
            formulario.save()
            return HttpResponseRedirect("/")
    else:
        formulario = videoclubForm()

    return render_to_response('nuevo_usuario.html', {'formulario': formulario},
                                      context_instance=RequestContext(request))

def log_in(request):
    if not request.user.is_anonymous():
        return HttpResponseRedirect("/members")
    if request.method == 'POST':
        formulario = AuthenticationForm(request.POST)
        if formulario.is_valid():
            granted = authenticate(request.POST["username"], request.POST["password"])
            if granted is not None:
                if granted.is_active:
                    login(request, granted)
                    return HttpResponseRedirect("/members")
                else:
                    return render_to_response('notActive.html', context_instance=RequestContext(request))
            else:
                return render_to_response('login.html', {"message" : "Login Error"}, context_instance=RequestContext(request))

    else:
        formulario = AuthenticationForm()

    return render_to_response('login.html', {'formulario': formulario},
                                      context_instance=RequestContext(request))

@login_required(login_url="/login")
def members(request):
    usuario = request.user
    return render_to_response('members.html', {'usuario': usuario},
                                      context_instance=RequestContext(request))

@login_required(login_url="/login")
def log_out(request):
    logout(request)
    return HttpResponseRedirect("/")
    
    
ADMIN.PY

from django.contrib import admin

from Videoclub.models import videoclub, socios
from django.contrib import admin

admin.site.register(videoclub)
admin.site.register(socios)


FORM.PY

from django.forms import ModelForm
from django import forms
from Videoclub.models import videoclub, socios

class formContact(forms.Form):
    nombre = forms.CharField(max_length=20, label="Nombre: ")
    email = forms.EmailField(label="Correo Electronico: ")
    mensaje = forms.CharField(widget=forms.Textarea)

class videoclubForm(ModelForm):
    class Meta:
        model = videoclub
        fields = "__all__"
        
        
MODELS.PY

from __future__ import unicode_literals

from django.db import models
from django.contrib.auth.models import User

class videoclub(models.Model):
    titulo = models.CharField(max_length=45, null=True)
    duracion = models.CharField(max_length=45, null=True)
    estado = models.CharField(max_length=45, null=True)

    def __unicode__(self):
        return self.titulo

    class Meta:
        verbose_name = 'cartelera'
        verbose_name_plural = 'cartelera'
        db_table = "cartelera" \
                   ""

class socios(models.Model):
    nombre = models.CharField(max_length=45, null=True)
    apellido = models.CharField(max_length=45, null=True)
    dni = models.IntegerField(primary_key=True)
    usuario = models.ForeignKey(User)
    foto_dni = models.ImageField(upload_to='fotos', verbose_name='Fdni')

    def __unicode__(self):
        return self.nombre
        
        
SETTINGS.PY

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_ROOT = os.path.join(BASE_DIR, 'fotos')

SITE_ID=1

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '4r^7#@^9k18*i3p91b_=wfdlj+b8%%wu+)8)6s997-oxpe#pol'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.admindocs',
    'FirstProyect',
    'Videoclub',
]


MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'FirstProyect.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FirstProyect.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'videoclub',
        'USER': 'root',
        'PASSWORD': 'sa12345',
        'HOST': '127.0.0.1',
        'PORT': '3306',
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'from_where@gmail.com'
EMAIL_HOST_PASSWORD = 'FakePassword'
EMAIL_PORT = 587


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(BASE_DIR,'static'),
)


URLS.PY

from django.conf.urls import patterns, include, url
from django.contrib import admin
from django.conf import settings
from Videoclub import views

admin.autodiscover()

urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^admin/doc/', include('django.contrib.admindocs.urls')),
    url(r'^$', 'Videoclub.views.cartelera', name="Index"),
    url(r'^detalle/(?P<id_pelicula>\d+)$', 'Videoclub.views.detalle'),
    url(r'^media/(?P<path>.*)$', 'django.views.static.serve', {'document_root': settings.MEDIA_ROOT}),
    url(r'^formulario/', 'Videoclub.views.formularioC'),
    url(r'^nueva_pelicula/', 'Videoclub.views.nueva_pelicula'),
    url(r'^usuario/nuevo/$','Videoclub.views.nuevo_usuario'),
    url(r'^login/$','Videoclub.views.log_in'),
    url(r'^members/$','Videoclub.views.members'),
    url(r'^members/logout/$', 'Videoclub.views.log_out'),
]


TEMPLATES (2 examples)

-- members.html --

{% extends 'base.html' %}

{% block encabezado %}
    <h1>WELLCOME</h1>
{% endblock %}

{% block contenido %}
    <h3>Wellcome User {{ usuario.username|upper }} </h3>
    <h3>Your last login was {{ usuario.last_login }} </h3>
    <h3>You were registered in {{ usuario.date_joined }} </h3>
    </br></br>
    <a href="logout/">Log Out</a>
{% endblock %}

-- base.html (masterpage) --

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Videoclub</title>
    <link rel="stylesheet" href="{{ STATIC_URL }}/static/css/base.css">
    <link rel="icono_entrada" href="{{ STATIC_URL }}/static/img/enter.png">
    <style>{% block style_css %}{% endblock %}</style>
    <script src="{{ STATIC_URL }}/static/js/jquery-1.12.1.min.js"></script>
    <script src="{{ STATIC_URL }}/static/js/js1.js"></script>
</head>
<body>

    <header>
        {% block encabezado %}{% endblock %}
        <nav>
            <ul id="menu">
                <li><a href="/">Inicio</a></li>
                <li><a href="detalle/1">Detalle Pelicula por Defecto</a></li>
                <li><a href="formulario/">Formulario de Contacto</a></li>
                <li><a href="nueva_pelicula/">Formulario de Contacto</a></li>
                <li><a href="usuario/nuevo/">Crear Nuevo Usuario</a> </li>
                <li><a href="login/">Logarse</a> </li>
            </ul>
        </nav>
    </header>

    <section class="contenido">
        {% block contenido %}{% endblock %}
    </section>

    <footer>
        <p>My first Web for testing´s purpouses</p>
    </footer>

</body>
</html>
